<?php

/**
 * @file
 * LTI Tool Provider Roles hook implementations and support functions.
 */

use Drupal\Core\Entity\EntityStorageException;
use Drupal\user\Entity\User;

/**
 * Implements hook_lti_tool_provider_authenticated().
 * @param User $user
 * @param array $context
 */
function lti_tool_provider_roles_lti_tool_provider_authenticated(User $user, array $context)
{
    $mapped_roles = Drupal::config('lti_tool_provider_roles.settings')->get('mapped_roles');

    $user_roles = user_roles(true, null);
    $lti_roles = parse_roles($context['roles']);

    if ($user->getUsername() === 'ltiuser') {
        return;
    }

    if (!count($mapped_roles)) {
        return;
    }

    foreach ($mapped_roles as $user_role => $lti_role) {
        if (array_key_exists($user_role, $user_roles)) {
            if (in_array($lti_role, $lti_roles)) {
                $user->addRole($user_role);
            }
            else {
                $user->removeRole($user_role);
            }
        }
    }

    try {
        $user->save();
    }
    catch (EntityStorageException $e) {
        Drupal::logger('lti_tool_provider')->error(
            'Error saving LTI user roles.'
        );
    }
}
