<?php
/**
 * @file
 * Install, update, and uninstall functions for the LTI Tool Provider Outcomes module.
 */

/**
 * Implements hook_schema().
 */
function lti_tool_provider_outcomes_schema() {
  $schema = array();
  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['lti_tool_provider_outcomes'] = array(
    'description' => 'The base table for our lti_tool_provider_outcomes.',
    'fields' => array(
      'lti_tool_provider_outcomes_id' => array(
        'description' => 'Primary key of the lti_tool_provider_outcomes.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_consumer_id' => array(
        'description' => 'ID of Tool Consumer',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_entity_id_fk' => array(
        'description' => 'ID of Resource Record',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_result_sourcedid' => array(
        'description' => 'Contains an identifier that indicates the LIS Result Identifier (if any) associated with the launch',
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
      ),
      'lti_tool_provider_outcomes_context_id' => array(
        'description' => 'Context identifier',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_user_id' => array(
        'description' => 'The user-id of the account inside the Tool Provider',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_score' => array(
        'description' => 'The score of this particular record',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_date_joined' => array(
        'description' => 'The Unix timestamp of the entity creation time.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_timestamp' => array(
        'description' => 'The timestamp of which the entity score is sent back to LMS',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'lti_tool_provider_outcomes_last_updated' => array(
        'description' => 'The timestamp of which the entity score is last updated',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('lti_tool_provider_outcomes_id'),
    'foreign keys' => array(
      'user_account' => array(
        'table' => 'users',
        'columns' => array('lti_tool_provider_outcomes_user_id' => 'uid'),
      ),
      'consumer_account' => array(
        'table' => 'lti_tool_provider_consumer',
        'columns' => array('lti_tool_provider_outcomes_consumer_id' => 'lti_tool_provider_consumer_id'),
      ),
      'resource_mapping' => array(
        'table' => 'lti_tool_provider_outcomes_resource',
        'columns' => array('lti_tool_provider_outcomes_resource_entity_id_fk' => 'lti_tool_provider_outcomes_resource_id'),
      )
    ),
  );
  $schema['lti_tool_provider_outcomes_resource'] = array(
    'description' => 'The table for lti_tool_provider_outcomes_resource entity.',
    'fields' => array(
      'lti_tool_provider_outcomes_resource_id' => array(
        'description' => 'Primary key of the lti_tool_provider_outcomes_resource.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_consumer_id' => array(
        'description' => 'ID of Tool Consumer',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_resource_link_title' => array(
        'description' => 'Title of the particular resource',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_resource_link_id' => array(
        'description' => 'Unique identifier of the particular resource',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_resultvalue_sourcedids' => array(
        'description' => 'A comma-separated list of result value sourcedids which the LIS service provider is able to accept',
        'type' => 'varchar',
        'length' => 512,
        'not null' => TRUE,
      ),
      'lti_tool_provider_outcomes_resource_score_datatype' => array(
        'description' => 'The data type of the score',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE,
      ),
      'lti_tool_provider_outcomes_resource_timestamp_created' => array(
        'description' => 'The timestamp of which the entity is created',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'lti_tool_provider_outcomes_resource_timestamp_last_updated' => array(
        'description' => 'The timestamp of which the datatype mapping is last updated',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('lti_tool_provider_outcomes_resource_id'),
  );
  return $schema;
}
/**
 * Implements hook_schema_alter().
 */
function lti_tool_provider_outcomes_schema_alter(&$schema) {
  $schema['lti_tool_provider_consumer']['fields']['lti_tool_provider_consumer_outcomes_url'] = array(
    'description' => st('Outcomes URL'),
    'type' => 'varchar',
    'length' => 512,
  );
  $schema['lti_tool_provider_consumer']['fields']['lti_tool_provider_consumer_ext'] = array(
    'description' => 'Extension',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'default' => 0,
  );
}
/**
 * Implements hook_install().
 */
function lti_tool_provider_outcomes_install() {
  db_add_field('lti_tool_provider_consumer', 'lti_tool_provider_consumer_outcomes_url', array(
    'description' => st('Outcomes URL'),
    'type' => 'varchar',
    'length' => 512,
  ));
  db_add_field('lti_tool_provider_consumer', 'lti_tool_provider_consumer_ext', array(
    'description' => 'Integer representive of which whether the consumer is an extension service of LTI',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'default' => 0,
  ));
}
/**
 * Implements hook_uninstall().
 */
function lti_tool_provider_outcomes_uninstall() {
  db_drop_field('lti_tool_provider_consumer', 'lti_tool_provider_consumer_outcomes_url');
  db_drop_field('lti_tool_provider_consumer', 'lti_tool_provider_consumer_ext');
}

